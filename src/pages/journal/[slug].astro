---
import type { GetStaticPaths, InferGetStaticParamsType } from "astro";
import { getCollection, getEntry } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import { journalEntry } from "../../util/data";

export const getStaticPaths = (async () => {
    return (await getCollection("journal")).map((post) => ({
        params: { slug: post.slug },
    }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { slug } = Astro.params as Params;
const post = await getEntry({ collection: "journal", slug });

const { Content } = await post.render();

const journalEntryData = journalEntry(post);
---

<MainLayout title={post.data.title} description={post.data.summary}>
    <style is:global>
    /* journal entry styling. (maybe there's a better way than global styling?) */
    article {
        display: grid;
        grid-template-columns: auto min(70ch, 100%) auto;
        gap: 0;
        margin: 1em;
    }

    article > * {
        grid-column: 2;
    }

    /* todo: is there a better width to use? */
    @media (min-width: 65em) {
        /* todo: should images be fullbleed too? (they're in p tags meaning they need :has)
                (should code even be fullbleed to begin with?) */

        /* article > pre {
            grid-column: 1 / 4;
            width: 70%;
            margin-left: auto;
            margin-right: auto;
        } */
    }

    /* margins! */
    article * {
        margin: 0;
    }

    article * + * {
        margin-top: 1em;
    }

    article h2 + h3,
    article h3 + h4,
    article h4 + h5,
    article h5 + h6 {
        margin-top: 0;
    }

    article li + li {
        margin-top: 0;
    }

    article p + ol,
    article p + ul/*,
    article p + pre */ {
        margin-top: 0.5em;
    }

    /* nested lists */
    article li > ul,
    article li > ol {
        margin-top: 0;
    }

    /* protect against dreaded horizontal scrollbar */
    article img {
        max-width: 100%;
    }

    /* general type features */
    article h2 a,
    article h3 a,
    article h4 a,
    article h5 a,
    article h6 a {
        display: none;
    }

    article h2:hover a,
    article h3:hover a,
    article h4:hover a,
    article h5:hover a,
    article h6:hover a {
        display: inline;
    }
    </style>

    <script
        type="application/ld+json"
        set:html={JSON.stringify(journalEntryData)}
    />

    <article>
        <p><a href="/">&#8592; go to homepage</a></p>

        <h1>{post.data.title}</h1>
        <p><em>{post.data.summary}</em></p>
        <hr />

        <Content />
    </article>
</MainLayout>
